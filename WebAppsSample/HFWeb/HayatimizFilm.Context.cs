//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HFWeb
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class HAYATIMIZFILMEntities : DbContext
    {
        public HAYATIMIZFILMEntities()
            : base("name=HAYATIMIZFILMEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<TBCART> TBCARTs { get; set; }
        public virtual DbSet<TBCATEGORy> TBCATEGORIES { get; set; }
        public virtual DbSet<TBCUSTOMER> TBCUSTOMERs { get; set; }
        public virtual DbSet<TBMOVy> TBMOVIES { get; set; }
        public virtual DbSet<TBORDER> TBORDERs { get; set; }
        public virtual DbSet<TBSUPPLIER> TBSUPPLIERs { get; set; }
        public virtual DbSet<SRGMOVy> SRGMOVIES { get; set; }
        public virtual DbSet<SRGOrderSupp> SRGOrderSupps { get; set; }
    
        public virtual int PRCAdd2Cart(Nullable<int> productID, Nullable<int> custID, Nullable<int> quantity, Nullable<decimal> price)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var custIDParameter = custID.HasValue ?
                new ObjectParameter("CustID", custID) :
                new ObjectParameter("CustID", typeof(int));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(int));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PRCAdd2Cart", productIDParameter, custIDParameter, quantityParameter, priceParameter);
        }
    
        public virtual int PRCMovieStatusUpdate(Nullable<int> movieID, Nullable<int> suppId, Nullable<bool> status)
        {
            var movieIDParameter = movieID.HasValue ?
                new ObjectParameter("MovieID", movieID) :
                new ObjectParameter("MovieID", typeof(int));
    
            var suppIdParameter = suppId.HasValue ?
                new ObjectParameter("SuppId", suppId) :
                new ObjectParameter("SuppId", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PRCMovieStatusUpdate", movieIDParameter, suppIdParameter, statusParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> PRCOder(Nullable<int> custID, string address, string notlar)
        {
            var custIDParameter = custID.HasValue ?
                new ObjectParameter("CustID", custID) :
                new ObjectParameter("CustID", typeof(int));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var notlarParameter = notlar != null ?
                new ObjectParameter("Notlar", notlar) :
                new ObjectParameter("Notlar", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("PRCOder", custIDParameter, addressParameter, notlarParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SPGiris(string ePOSTA, string pAROLA)
        {
            var ePOSTAParameter = ePOSTA != null ?
                new ObjectParameter("EPOSTA", ePOSTA) :
                new ObjectParameter("EPOSTA", typeof(string));
    
            var pAROLAParameter = pAROLA != null ?
                new ObjectParameter("PAROLA", pAROLA) :
                new ObjectParameter("PAROLA", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SPGiris", ePOSTAParameter, pAROLAParameter);
        }
    }
}
